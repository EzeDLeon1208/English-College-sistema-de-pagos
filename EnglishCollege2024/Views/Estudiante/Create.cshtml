@model EnglishCollege2024.Estudiante

@{
    ViewBag.Title = "Crear";
    List<SelectListItem> barrio = (List<SelectListItem>)ViewBag.barrios;
    List<SelectListItem> curso = (List<SelectListItem>)ViewBag.cursos;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h1>Datos del Estudiante</h1>
    <hr />

    <h4>(*) Campos Obligatorios </h4>

    @if (TempData["MensajeExito"] != null)
    {
        <div id="alerta" class="alert alert-success">
            @TempData["MensajeExito"]
        </div>
    }
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="form-group col-md-6">
                @Html.Label("Documento (*)", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.DNI, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DNI, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.Label("Nombre y Apellido (*)", htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.NombreCompleto, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NombreCompleto, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.Label("Fecha de Nacimiento (*)", htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.FechaNacimiento, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                    @*@Html.ValidationMessageFor(model => model.FechaNacimiento, "", new { @class = "text-danger" })*@
                    @if (ViewBag.ErrorFechaNacimiento != "")
                    {
                        @Html.Label("", (string)ViewBag.ErrorFechaNacimiento, new { @class = "text-danger" })
                    }
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.Label("Dirección", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.Label("Telefono Alternativo", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Telefono1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Telefono1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.Label("Barrio (*)", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.idBarrio, barrio, "seleccione un barrio", htmlAttributes: new { @class = "form-control" })
                    @*@Html.ValidationMessageFor(model => model.idBarrio, "", new { @class = "text-danger" })*@
                    @if (ViewBag.ErrorBarrio != "")
                    {
                        @Html.Label("", (string)ViewBag.ErrorBarrio, new { @class = "text-danger" })
                    }
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.Label("Celular", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Telefono2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Telefono2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.Label("Curso (*)", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.idCurso, curso, "seleccione un curso", htmlAttributes: new { @class = "form-control" })
                    @*@Html.ValidationMessageFor(model => model.idCurso, "", new { @class = "text-danger" })*@
                    @if (ViewBag.ErrorCurso != "")
                    {
                        @Html.Label("", (string)ViewBag.ErrorCurso, new { @class = "text-danger" })
                    }
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.Label("Pendiente de Pago (Si no tiene deuda, poner 0)", htmlAttributes: new { @class = "control-label col-md-10" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.PendientePago, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Telefono2, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <br />
        @if (ViewBag.Error != "")
        {
            @Html.Label("", (string)ViewBag.Error, new { @class = "text-danger" })
        }

        <div class="form-group">
            <div class="col-md-12 text-center" style="margin-top: 3rem">
                @*@Html.ActionLink("Guardar", "Create", "", new { @class = "btn btn-success" })*@
                <input type="submit" value="Guardar" class="btn btn-success" />
            </div>
        </div>
</div>
}

<div>
    @Html.ActionLink("Volver", "Index", "", new { @class = "btn btn-primary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        // Ocultar la alerta después de 3 segundos
        setTimeout(function () {
            $("#alerta").fadeOut("slow");
        }, 3000);
    </script>
}

